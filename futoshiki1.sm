#const size = 5.

less_than(1,2, 2,2).
less_than(2,4, 1,4).
%less_than(3,5, 3,2).
less_than(3,4, 3,3).
less_than(4,1, 3,1).
less_than(5,1, 4,1).
less_than(5,2, 4,2).
less_than(4,3, 5,3).
less_than(5,1, 5,2).
less_than(5,3, 5,2).
less_than(5,3, 5,4).
less_than(5,4, 5,5).






number(1..size).

x(X,Y,N) :- hint(X,Y,N).

%
% Latin square: all rows and columns must be different.
% 
1 { x(X,Y,N):number(N) } 1 :- number(X),number(Y).
1 { x(X,Y,N):number(X) } 1 :- number(N),number(Y).
1 { x(X,Y,N):number(Y) } 1 :- number(N),number(X). 

% all < constraints must be satisfied

:- x(X1,Y1,N1), x(X2,Y2,N2), less_than(X1,Y1, X2,Y2), N1 >= N2.